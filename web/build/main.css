
html,body{
    width: 100%;
    height: 100%;
    font-family: 'Raleway', sans-serif;
}

#firstSection {
    background-color: black;
    color: white;
    height: auto;
}
.firstSectText {
    text-align: center;
    font-size: 14px;
    width: 90vw;
}
.buttonMain {
    background-color: #8bafc7;
    color: white;
    font-size: 12px;
    padding-top: 1.5em;
    padding-bottom: 1.5em;
    padding-left: 2.5em;
    padding-right: 2.5em;
    border-radius: 5px;
}
.buttonMain:hover {
    background-color: #b9e1fc;
}
.article {
    padding: 20px;
    height: 250px;
    background-color: #ffffff;
}
.articles-item {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease-in-out;
    -webkit-box-shadow: 2px 10px 29px -5px rgba(0, 0, 0, 0.75);
    -moz-box-shadow: 2px 10px 29px -5px rgba(0, 0, 0, 0.75);
    box-shadow: 2px 10px 29px -5px rgba(0, 0, 0, 0.75);
}
.is-showing {
    opacity: 1;
    transform: translateY(0px);
}
.container-articles {
    padding: 20px 0;
}
.descripcion-article {
    background-color: #ffffff;
    font-size: 20px;
    padding: 8px;
    margin-bottom: 5px;
    text-align: center;
}
.descripcion-article h1 {
    font-size: 1.5em;
}
.articleCounter {
    font-size: 16px;
    color: gray;
}
.article_image {
    height: 100% !important;
    width: 100% !important;
}
@media screen and (min-width: 575px) {
.hidden-lg {
        display: none !important;
}
}
@media screen and (max-width: 576px) {
.hidden-resp {
        display: none !important;
}
}



.navbar {
    z-index: 9;
}
.navbar-center
{
    left: auto;
    text-align: center;
    margin: 0 auto;
}
button.navbar-toggler{
    outline: 0 none;
    border: none;
    color: #000000;
}
button.navbar-toggler:focus {
    outline: 0 none;
    border: none;
}
.buttonMainNav{
    background-color: #8bafc7;
    color: white;
}
.buttonMainNav:hover{
    background-color: #b9e1fc;
    color: white;
}
img{
    height: 2em;
    width: 6em;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/